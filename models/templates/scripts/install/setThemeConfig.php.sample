<?php
{licenseBlock}

// Item themes
use oat\tao\model\ThemeRegistry;
use Jig\Utils\StringUtils;

// Platform themes
use {authorNs}\{id}\model\theme\{platformTheme};
use oat\oatbox\service\ServiceManager;
use oat\tao\model\theme\ThemeService;
use oat\tao\model\ThemeNotFoundException;


// Item themes
// 'Name of the theme'
$itemThemes = array(
    '{itemThemeId}'
);

// override if required
$defaultTheme = '{itemThemeId}';

foreach($itemThemes as $themeName){
    $pathFragment = StringUtils::removeSpecChars($themeName);
    $themeId = StringUtils::camelize($pathFragment);
    ThemeRegistry::getRegistry()->registerTheme(
        $themeId,
        $themeName,
        implode(DIRECTORY_SEPARATOR, array('{id}', 'views', 'css', 'themes', 'items', $pathFragment, 'theme.css')), array('items')
    );
}

ThemeRegistry::getRegistry()->setDefaultTheme('items', $defaultTheme);

// TAO theme would usually be removed from the stack if custom themes are used
// Make sure another theme has been set to default in this case.
if($defaultTheme !== 'tao') {    
    try {
        ThemeRegistry::getRegistry()->unregisterTheme('tao');
    } catch(ThemeNotFoundException $e) {
        // theme was already deleted, nothing to worry about
    }
}


// Platform themes
$serviceManager = ServiceManager::getServiceManager();
$themeService = $serviceManager->get(ThemeService::SERVICE_ID);

$themeService->setTheme(new {platformTheme}());
$serviceManager->register(ThemeService::SERVICE_ID, $themeService);
