{"version":3,"file":"routes.js","sources":["routes.js","ControllerMap/index.js","ScriptRunner/index.js","settings/extensionManager.js"],"names":[],"mappings":"AAAA,OAAA,mCAAA,WACA,OACA,mBACA,SACA,MAAA,yCAGA,cACA,SACA,MAAA,qCCKA,OAAA,6CAAA,cAEA,OChBA,6CAAA,SAAA,WAAA,SAAA,EAAA,SACA,OACA,MAAA,WAEA,EAAA,WAAA,MAAA,SAAA,OACA,GAAA,QAAA,EAAA,MAAA,QAAA,KAAA,SACA,GAAA,MACA,KAAA,OACA,IAAA,QAAA,KAAA,OAAA,eAAA,eACA,SAAA,OACA,QAAA,SAAA,MACA,QAAA,SACA,KAAA,QACA,QAAA,kBAAA,KAAA,SAEA,QAAA,mBAAA,KAAA;UAUA,OCzBA,oDAAA,SAAA,OAAA,UAAA,WAAA,SAAA,EAAA,GAAA,QAAA,SAQA,QAAA,iBAAA,WACA,GAAA,gBAOA,OANA,GAAA,IAAA,UAAA,qCAAA,KAAA,WACA,GAAA,KAAA,EAAA,MAAA,KAAA,OACA,KAAA,gBAAA,IACA,MAAA,KAAA,KACA,aAAA,aAAA,OAAA,QAEA,aAIA,QAAA,WAAA,MAEA,IAAA,GADA,MACA,EAAA,EAAA,EAAA,KAAA,OAAA,IACA,EAAA,QAAA,KAAA,GAAA,GAAA,GAAA,EAAA,KAAA,KAAA,GAEA,OAAA,GAGA,QAAA,iBAAA,KACA,EAAA,6BAAA,OAAA,MAAA,IAAA,QACA,EAAA,6BAAA,MAAA,UAAA,EAAA,6BAAA,KAAA;CAGA,QAAA,wBACA,GAAA,KAAA,UAAA,sBACA,GAAA,6BAAA,KAAA,GAAA,8BAAA,QAAA,KAAA,MACA,gBAAA,GAAA,8BAAA,QAAA,KAAA,MACA,EAAA,MACA,KAAA,OACA,IAAA,QAAA,SAAA,gCACA,KAAA,MAAA,IACA,SAAA,OACA,QAAA,SAAA,MACA,QAAA,SACA,KAAA,SACA,gBAAA,GAAA,yCAAA,QAAA,KAAA,MAEA,EAAA,yBAAA,SAAA,MAAA,KAAA,aAAA,KAAA,IAAA,WAEA,wBACA,gCAGA,aAAA,EACA,gBAAA,mBAAA,IAAA,YAEA,QAAA,kBAAA,KAAA;IAIA,cACA,gBAAA,GAAA,2DAIA,QAAA,6BACA,uBAAA,UAAA,QACA,aACA,EAAA,yBAAA,SAAA,gBAAA,OAAA,MAAA,QAAA,KACA,gBAAA,GAAA,wBACA,EAAA,MACA,KAAA,MACA,IAAA,EAAA,EAAA,gBAAA,IAAA,KAAA,QACA,QAAA,WACA,QAAA,SACA,EAAA,yBAAA,SAAA,gBAAA,QAAA,KACA,EAAA,6BAAA,KAAA,GAAA,uBACA,gBAAA,GAAA,yBACA,OAAA,SAAA,aAIA,uBAIA,QAAA,eAGA,EAAA,gCAAA,YAAA,gBACA,YAAA,iBAEA,EAAA,gDAAA,SAAA,iBACA,EAAA,+CAAA,SAAA;CA3FA,GAAA,kBACA,aACA,sBAAA,GACA,aAAA,EACA,aAAA,CAmGA,QACA,MAAA,WAGA,cAEA,EAAA,oBAAA,OAEA,EAAA,cAAA,MAAA,WACA,GAAA,KAAA,QAAA,KAAA,SAAA,oBAAA,eAAA,IAAA,EAAA,OAAA,IAAA,EAAA,YAAA,OAEA,OADA,SAAA,QAAA,GAAA,wBAAA,MACA,IAIA,EAAA,yCAAA,KAAA,WACA,GAAA,KAAA,EAAA,MAAA,MACA,eAAA,KAAA,KACA,EAAA,eAAA,KAAA,SAAA,eAGA,EAAA,4CAAA,MAAA,SAAA,OACA,MAAA,oBAGA,EAAA,qDAAA,MAAA,WACA,GAAA,gBAAA,EAAA,iBACA;EAAA,MAAA,SAAA,SAAA,SAAA,KAAA,0BAAA,OAAA,EACA,eAAA,KAAA,YAAA,GAGA,eAAA,KAAA,YAAA,KAIA,EAAA,kBAAA,MAAA,SAAA,OAUA,MARA,cACA,EAAA,iDAAA,KAAA,WACA,GAAA,KAAA,EAAA,MAAA,KAAA,QAAA,MAAA,KAAA,GACA,KAAA,gBAAA,IACA,MAAA,SAAA,UAAA,UAAA,OAAA,OACA,UAAA,KAAA,OAEA,UAAA,UAAA,WACA,GAAA,UAAA,QACA,MAAA,GAAA,0BACA,IAGA,aAAA,IAAA,UAAA,OAGA,EAAA,6BAAA,KAAA,GAAA,+BAAA,QAAA,KAAA,UAAA,SACA,EAAA,yBAAA,MAAA,GACA,EAAA,6BAAA,QACA,gBAAA,GAAA,2DAAA,QAAA,KAAA,UAAA,KAAA,QACA,EAAA,oBAAA,QACA,OAAA,EACA,MAAA,IACA,OAAA,IACA,UAEA,KAAA,GAAA,MACA,MAAA,WACA,EAAA,MAAA,OAAA;IAIA,KAAA,GAAA,OACA,MAAA,WAEA,gBAAA,GAAA,8BACA,EAAA,yBAAA,SACA,aAAA,EACA,sBAAA,EACA,gCAKA,OAAA,oBAGA,EAAA,kBAAA,MAAA,SAAA,OACA,GAAA,IAAA,EAAA,MAAA,QAAA,KAAA,QACA,GAAA,MACA,KAAA,OACA,IAAA,QAAA,SAAA,wCACA,KAAA,MAAA,GACA,SAAA,OACA,QAAA,SAAA,MACA,QAAA,SACA,QAAA,kBAAA,KAAA,SACA,KAAA,SACA,OAAA,SAAA,cAMA,EAAA,iBAAA,MAAA,SAAA,OACA,GAAA,IAAA,EAAA,MAAA,QAAA,KAAA,QACA,GAAA,MACA,KAAA,OACA,IAAA,QAAA,SAAA,uCACA,KAAA,MAAA,GACA,SAAA,OACA,QAAA,SAAA,MACA,QAAA,SACA,QAAA,kBAAA,KAAA,SACA,KAAA,SACA,OAAA,SAAA;MAMA,EAAA,oBAAA,MAAA,SAAA,OACA,GAAA,IAAA,EAAA,MAAA,QAAA,KAAA,QACA,GAAA,MACA,KAAA,OACA,IAAA,QAAA,SAAA,0CACA,KAAA,MAAA,GACA,SAAA,OACA,QAAA,SAAA,MACA,QAAA,SACA,QAAA,kBAAA,KAAA,SACA,KAAA,SACA,OAAA,SAAA","sourcesContent":["define('taoDevTools/controller/routes',[],function(){\n    return {\n        'ExtensionsManager' : {\n            'actions' : {\n                'index' : 'controller/settings/extensionManager'\n            }\n        },\n        'ScriptRunner' : {\n            'actions' : {\n                'index' : 'controller/ScriptRunner/index'\n            }\n        },\n    };\n});\n\n","/*\ndefine(['jquery', 'helpers', 'context','jsTree/jquery.tree'], function($, helpers, context){\n\t$(document).ready(function () {\n\t    // Create jqxTree\n\t    \n\t    $('#jqxTree').tree({\n\t    \tui: {\n\t\t\t\ttheme_name : \"custom\",\n\t            theme_path : context.taobase_www + 'js/lib/jsTree/themes/custom/style.css'\n\t\t\t}\n\t    });\n\t});\n});\n*/;\ndefine(\"taoDevTools/controller/ControllerMap/index\", function(){});\n\n","define('taoDevTools/controller/ScriptRunner/index',['jquery', 'helpers'], function($, helpers){\n\treturn {\n        start : function(){\n            \n            $('.script').click(function(event) {\n            \tvar action = $(event.target).data('action');\n            \t$.ajax({\n                    type: \"POST\",\n                    url: helpers._url(action, 'ScriptRunner', 'taoDevTools'),\n                    dataType: 'json',\n                    success: function(data) {\n                        helpers.loaded();\n                        if (data.success) {\n                            helpers.createInfoMessage(data.message);\n                        } else {\n                        \thelpers.createErrorMessage(data.message);\n                        }\n                    }\n            \t});\n            });\n            \n        }\n    };\n\n});\n","define('taoDevTools/controller/settings/extensionManager',['jquery', 'i18n', 'context', 'helpers'], function($, __, context, helpers){\n\n    var ext_installed = [];\n    var toInstall = [];\n    var indexCurrentToInstall = -1;\n    var percentByExt = 0;\n    var installError = 0;\n\n    function getDependencies(extension) {\n            var dependencies = [];\n            $('#' + extension + ' .dependencies li:not(.installed)').each(function() {\n                    var ext = $(this).attr('rel');\n                    var deps = getDependencies(ext);\n                    deps.push(ext);\n                    dependencies = dependencies.concat(deps);\n            });\n            return dependencies;\n    }\n\n    //Give an array with unique values\n    function getUnique(orig){\n            var a = [];\n            for (var i = 0; i < orig.length; i++) {\n                    if ($.inArray(orig[i], a) < 0) a.push(orig[i]);\n            }\n            return a;\n    }\n\n    function progressConsole(msg) {\n            $('#installProgress .console').append('<p>' + msg + '</p>');\n            $('#installProgress .console').prop({scrollTop: $('#installProgress .console').prop(\"scrollHeight\")});\n    }\n\n    function installNextExtension() {\n            var ext = toInstall[indexCurrentToInstall];\n            $('#installProgress p.status').text(__('Installing extension %s...').replace('%s', ext));\n            progressConsole(__('Installing extension %s...').replace('%s', ext));\n            $.ajax({\n                    type: \"POST\",\n                    url: context.root_url + \"tao/ExtensionsManager/install\",\n                    data: 'id='+ext,\n                    dataType: 'json',\n                    success: function(data) {\n                            helpers.loaded();\n                            if (data.success) {\n                                    progressConsole(__('> Extension %s succesfully installed.').replace('%s', ext));\n\n                                    $('#installProgress .bar').animate({width:'+=' + percentByExt + '%'}, 1000, function() {\n                                            //Next\n                                            indexCurrentToInstall++;\n                                            hasNextExtensionToInstall();\n                                    });\n                            } else {\n                                    installError = 1;\n                                    progressConsole('Installation of ' + ext + ' failed');\n                            }\n                            helpers.createInfoMessage(data.message);\n                    }\n            });\n\n            if (installError) {\n                    progressConsole(__('A fatal error occured during the installation process.'));\n            }\n    }\n\n    function hasNextExtensionToInstall() {\n            if (indexCurrentToInstall >= toInstall.length) {\n                    toInstall = [];\n                    $('#installProgress .bar').animate({backgroundColor:'#bb6',width:'100%'}, 1000);\n                    progressConsole(__('Generating cache...'));\n                    $.ajax({\n                            type: \"GET\",\n                            url: $($('#main-menu a')[0]).prop('href'),\n                            success: function(data) {\n                                    helpers.loaded();\n                                    $('#installProgress .bar').animate({backgroundColor:'#6b6'}, 1000);\n                                    $('#installProgress p.status').text(__('Installation done.'));\n                                    progressConsole(__('> Installation done.'));\n                                    window.location.reload();\n                            }\n                    });\n            } else {\n                    installNextExtension();\n            }\n    }\n\n    function styleTables(){\n            // Clean all to make this function able to \"restyle\" after\n            // data refresh.\n            $('#Extensions_manager table tr').removeClass('extensionOdd')\n                                                                             .removeClass('extensionEven');\n\n            $('#Extensions_manager table tr:nth-child(even)').addClass('extensionEven');\n            $('#Extensions_manager table tr:nth-child(odd)').addClass('extensionOdd');\n    }\n\n    function noAvailableExtensions(){\n            var $noAvailableExtElement = $('<div/>');\n            $noAvailableExtElement.attr('id', 'noExtensions')\n                                                      .addClass('ui-state-highlight')\n                                                      .text(__('No extensions available.'));\n\n            $('#available-extensions-container').empty().append($noAvailableExtElement);\n    }\n    \n    return {\n        start : function(){\n            \n            // Table styling.\n            styleTables();\n\n            $('#installProgress').hide();\n            \n            $('#addButton').click(function() {\n                var uri = helpers._url('create', 'ExtensionsManager', 'taoDevTools') + '?' + $.param({'uri': $('#openuri').val()});\n                helpers.openTab(__('Create new extension'), uri);\n                return false;\n            });\n\n            //Detect wich extension is already installed\n            $('#extensions-manager-container .ext-id').each(function() {\n                    var ext = $(this).text();\n                    ext_installed.push(ext);\n                    $('.ext-id.ext-' + ext).addClass('installed');\n            });\n\n            $('#available-extensions-container tr input').click(function(event){\n                    event.stopPropagation();\n            });\n\n            $('#available-extensions-container tr input:checkbox').click(function() {\n                    var $installButton = $('#installButton');\n                    if ($(this).parent().parent().parent().find('input:checkbox:checked').length > 0){\n                            $installButton.attr('disabled', false);\n                    }\n                    else{\n                            $installButton.attr('disabled', true);\n                    }\n            });\n\n            $('#installButton').click(function(event) {\n                    //Prepare the list of extension to install in the order of dependency\n                    toInstall = [];\n                    $('#available-extensions-container input:checked').each(function() {\n                            var ext = $(this).prop('name').split('_')[1];\n                            var deps = getDependencies(ext);\n                            if (deps.length) toInstall = toInstall.concat(deps);\n                            toInstall.push(ext);\n                    });\n                    toInstall = getUnique(toInstall);\n                    if (toInstall.length == 0) {\n                            alert(__('Nothing to install !'));\n                            return false;\n                    }\n                    //Let's go\n                    percentByExt = 100 / toInstall.length;\n\n                    //Show the dialog with the result\n                    $('#installProgress p.status').text(__('%s extension(s) to install.').replace('%s', toInstall.length));\n                    $('#installProgress .bar').width(0);\n                    $('#installProgress .console').empty();\n                    progressConsole(__('Do you wish to install the following extension(s):\\n%s?').replace('%s', toInstall.join(', ')));\n                    $('#installProgress').dialog({\n                            modal: true,\n                            width: 400,\n                            height: 300,\n                            buttons: [\n                                    {\n                                            text: __('No'),\n                                            click: function() {\n                                                    $(this).dialog('close');\n                                            }\n                                    },\n                                    {\n                                            text: __('Yes'),\n                                            click: function() {\n                                                    //Run the install one by one\n                                                    progressConsole(__('Preparing installation...'));\n                                                    $('.ui-dialog-buttonpane').remove();\n                                                    installError = 0;\n                                                    indexCurrentToInstall = 0;\n                                                    installNextExtension();\n                                            }\n                                    }\n                            ]\n                    });\n                    event.preventDefault();\n            });\n            \n            $('.disableButton').click(function(event) {\n            \tvar id = $(event.target).data('extid');\n            \t$.ajax({\n                    type: \"POST\",\n                    url: context.root_url + \"taoDevTools/ExtensionsManager/disable\",\n                    data: 'id='+id,\n                    dataType: 'json',\n                    success: function(data) {\n                        helpers.loaded();\n                        helpers.createInfoMessage(data.message);\n                        if (data.success) {\n                            window.location.reload();\n                        }\n                    }\n            \t});\n            });\n            \n            $('.enableButton').click(function(event) {\n            \tvar id = $(event.target).data('extid');\n            \t$.ajax({\n                    type: \"POST\",\n                    url: context.root_url + \"taoDevTools/ExtensionsManager/enable\",\n                    data: 'id='+id,\n                    dataType: 'json',\n                    success: function(data) {\n                        helpers.loaded();\n                        helpers.createInfoMessage(data.message);\n                        if (data.success) {\n                            window.location.reload();\n                        }\n                    }\n            \t});\n            });\n            \n            $('.uninstallButton').click(function(event) {\n            \tvar id = $(event.target).data('extid');\n            \t$.ajax({\n                    type: \"POST\",\n                    url: context.root_url + \"taoDevTools/ExtensionsManager/uninstall\",\n                    data: 'id='+id,\n                    dataType: 'json',\n                    success: function(data) {\n                        helpers.loaded();\n                        helpers.createInfoMessage(data.message);\n                        if (data.success) {\n                            window.location.reload();\n                        }\n                    }\n            \t});\n            });\n        }\n    };\n\n});\n"]}